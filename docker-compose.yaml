version: '3.9'

services:
    postgres-db:
        image: postgres:latest
        container_name: postgres-db
        volumes:
          - pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        restart: always
        ports:
            - "5432:5432"
        networks:
            - main
        healthcheck:
            test: "exit 0"
    django-server:
        container_name: django-server
        build: ./django_api
        command:  ["wait-for-it.sh", "postgres-db:5432", "-t", "20", "--",
                  "python3", "manage.py", "runserver", "0.0.0.0:8000"]
        volumes:
            - ./django_api:/code
        environment:
            - SQL_ENGINE=django.db.backends.postgresql
            - SQL_DATABASE=postgres
            - SQL_USER=postgres
            - SQL_PASSWORD=postgres
            - SQL_HOST=postgres-db
            - SQL_PORT=5432
        ports:
            - "8000:8000"
        depends_on:
            - postgres-db
        restart: always
        networks:
            - main
        healthcheck:
            test: "exit 0"
    flask-server:
        container_name: flask-server
        build: ./api_comms
        command: ["wait-for-it.sh", "django-server:8000", "-t", "20", "--",
                 "python3", "flask_app/app.py"]
        volumes:
            - ./api_comms:/code
        environment:
            - UI_PORT=5000
            - API_PORT=8000
        ports:
            - "5000:5000"
        depends_on:
            - postgres-db
            - django-server
        restart: always
        networks:
            - main
        healthcheck:
            test: "exit 0"

volumes:
    pgdata:

networks:
    main:
